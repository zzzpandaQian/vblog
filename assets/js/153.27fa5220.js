(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{574:function(t,a,e){"use strict";e.r(a);var r=e(24),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"django介绍和相关术语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#django介绍和相关术语"}},[t._v("#")]),t._v(" django介绍和相关术语")]),t._v(" "),e("h2",{attrs:{id:"一、django介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、django介绍"}},[t._v("#")]),t._v(" 一、Django介绍")]),t._v(" "),e("h4",{attrs:{id:"_1、简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、简介"}},[t._v("#")]),t._v(" 1、简介")]),t._v(" "),e("p",[t._v("​\tDjango是Python语言中的一个web框架，Python语言中主流的web框架有Django、Tornado、Flask 等多种。Django相较与其它WEB框架，其优势为：大而全，框架本身集成了ORM、模型绑定、模板引擎、缓存、Session等功能，是一个全能型框架，拥有自己的Admin数据管理后台，第三方工具齐全，性能折中。缺点：功能太多，数据分表复杂，高性能扩展复杂。")]),t._v(" "),e("p",[t._v("​\tDjango 是开源的！")]),t._v(" "),e("h4",{attrs:{id:"_2、安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装"}},[t._v("#")]),t._v(" 2、安装")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("pip安装：在cmd命令窗口中，输入：")]),t._v(" "),e("div",{staticClass:"language-cmd line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("pip install django\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[t._v("pycharm安装：在file >> settings >> project >> project interpreter 中 搜索  django，进行安装")])]),t._v(" "),e("li",[e("p",[t._v("下载安装包安装：")]),t._v(" "),e("p",[t._v("在官网："),e("a",{attrs:{href:"https://www.djangoproject.com/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.djangoproject.com/download/"),e("OutboundLink")],1),t._v(" ， 下载 django-master.tar，解压后，在解压目录中 运行 cmd（或者在cmd中切换到解压目录），然后通过输入命令：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("python setup.py install \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])]),t._v(" "),e("h4",{attrs:{id:"_3、文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、文档"}},[t._v("#")]),t._v(" 3、文档")]),t._v(" "),e("p",[t._v("​\t官方文档的链接在："),e("a",{attrs:{href:"https://docs.djangoproject.com/en/2.2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.djangoproject.com/en/2.2/"),e("OutboundLink")],1),t._v(" ，")]),t._v(" "),e("p",[t._v("​\t点击页面右下角的 language 按钮，可以选择 zh-hans ，显示中文，只有部分页面有中文翻译")]),t._v(" "),e("p",[t._v("​\t点击页面右下角的Documentation version，可以选择版本")]),t._v(" "),e("h2",{attrs:{id:"二、django相关知识学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、django相关知识学习"}},[t._v("#")]),t._v(" 二、Django相关知识学习")]),t._v(" "),e("h4",{attrs:{id:"_1、django结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、django结构"}},[t._v("#")]),t._v(" 1、Django结构")]),t._v(" "),e("h4",{attrs:{id:"_2、相关术语和规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、相关术语和规范"}},[t._v("#")]),t._v(" 2、相关术语和规范")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("B/S和C/S")])]),t._v(" "),e("p",[t._v("Django是用于开发B/S架构的软件的，软件主要分为B/S架构和C/S架构：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("B/S：全称Browser/Server(浏览器/服务器)")])]),t._v(" "),e("li",[e("p",[t._v("C/S：全称Client/Server(客户端/服务器)")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("MVC")])]),t._v(" "),e("p",[t._v("​\tMVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("M： 管理应用程序的状态（通常存储到数据库中），并约束改变状态的行为（或者叫做“业务规则”）。")])]),t._v(" "),e("li",[e("p",[t._v("V： 负责把数据格式化后呈现给用户。")])]),t._v(" "),e("li",[e("p",[t._v("C： 接受外部用户的操作，根据操作访问模型获取数据，并调用“视图”显示这些数据。控制器是将“模型”和“视图”隔离，并成为二者之间的联系纽带。")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("MTV")])]),t._v(" "),e("p",[t._v("​\tDjango也是一个MVC框架。但是在Django中，控制器接受用户输入的部分由框架自行处理，所以 Django 里更关注的是模型（Model）、模板(Template)和视图（Views），称为 MTV模式：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("M： 代表模型（Model），即数据存取层。 该层处理与数据相关的所有事务： 如何存取、如何验证有效性、包含哪些行为以及数据之间的关系等。")])]),t._v(" "),e("li",[e("p",[t._v("T： 代表模板(Template)，即表现层。 该层处理与表现相关的决定： 如何在页面或其他类型文档中进行显示。")])]),t._v(" "),e("li",[e("p",[t._v("V： 代表视图（View），即业务逻辑层。 该层包含存取模型及调取恰当模板的相关逻辑。 你可以把它看作模型与模板之间的桥梁。")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("ORM")])]),t._v(" "),e("p",[t._v("​\t对象关系映射（英语：(Object Relational Mapping，简称ORM，或O/RM，或O/R mapping），是一种程序技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用的--“虚拟对象数据库”。")]),t._v(" "),e("p",[t._v("​\tORM方法论基于三个核心原则：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("简单：以最基本的形式建模数据。")])]),t._v(" "),e("li",[e("p",[t._v("传达性：数据库结构被任何人都能理解的语言文档化。")])]),t._v(" "),e("li",[e("p",[t._v("精确性：基于数据模型创建正确标准化的结构。")])])]),t._v(" "),e("p",[t._v("​\tORM是随着面向对象的软件开发方法发展而产生的。用来把对象模型表示的对象映射到基于SQL 的关系模型数据库结构中去。这样，我们在具体的操作实体对象的时候，就不需要再去和复杂的 SQ L 语句打交道，只需简单的操作实体对象的属性和方法。ORM技术是在对象和关系之间提供了一条桥梁，前台的对象型数据和数据库中的关系型的数据通过这个桥梁来相互转化。")])])]),t._v(" "),e("p",[t._v("​")])])}),[],!1,null,null,null);a.default=n.exports}}]);